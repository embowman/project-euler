# Each new term in the Fibonacci sequence is generated by adding the
# previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89

# By considering the terms in the Fibonacci sequence whose values do not
# exceed four million, find the sum of the even-valued terms.
# Answer: 4613732


def fib(memo: dict, n: int) -> int:
    if n == 0 or n == 1:
        return n

    if n not in memo:
        memo[n] = fib(memo=memo, n=n - 1) + fib(memo=memo, n=n - 2)

    return memo[n]

def main() -> int:
    memo = dict()
    store = list(fib(memo=memo, n=n) for n in range(34))

    return sum(i for i in store if i % 2 == 0)


if __name__ == '__main__':
    print(main())
